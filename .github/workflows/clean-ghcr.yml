name: 🧹 Clean GHCR SHA256 Images

on:
  workflow_dispatch:  # 支持手动触发
  schedule:
    - cron: '0 3 * * *'  # 每天 UTC 3 点执行（北京时间 11 点）

permissions:
  packages: write  # 需要写权限以删除镜像
  contents: read   # 需要读权限以访问仓库信息

jobs:
  clean:
    runs-on: ubuntu-latest
    steps:
      - name: 🧾 Delete SHA256-tagged GHCR images
        env:
          GH_TOKEN: ${{ github.token }}  # 使用默认 GITHUB_TOKEN
          REPO_NAME: ${{ github.repository }}
          PACKAGE_NAME: adguard  # 明确指定包名
        run: |
          # 调试：输出环境变量
          echo "🔍 REPO_NAME: $REPO_NAME"
          echo "🔍 PACKAGE_NAME: $PACKAGE_NAME"

          # 获取所有镜像版本并调试输出
          echo "🔍 Fetching all package versions for $PACKAGE_NAME..."
          VERSIONS_JSON=$(gh api -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer $GH_TOKEN" \
            /user/packages/container/$PACKAGE_NAME/versions \
            --paginate)

          # 检查 JSON 数据是否为空
          if [ -z "$VERSIONS_JSON" ]; then
            echo "❌ No versions found or API request failed."
            exit 1
          fi

          # 输出原始 JSON 数据以便调试
          echo "📜 Raw versions JSON:"
          echo "$VERSIONS_JSON" | jq .

          # 过滤 SHA256 标签的版本 ID
          VERSIONS=$(echo "$VERSIONS_JSON" | jq -r '.[] | select(.metadata.container.tags | any(. | startswith("sha256:"))) | .id')

          # 检查是否有 SHA256 标签的版本
          if [ -z "$VERSIONS" ]; then
            echo "✅ No SHA256-tagged versions found."
            exit 0
          fi

          # 遍历并删除每个 SHA256 标签的版本
          for vid in $VERSIONS; do
            echo "🗑️ Deleting version ID: $vid"
            gh api -X DELETE \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer $GH_TOKEN" \
              /user/packages/container/$PACKAGE_NAME/versions/$vid
          done
